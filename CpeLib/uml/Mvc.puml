@startuml

skinparam defaultFontSize 12

abstract ViewBase < class TController > {
    -items : vector<IViewRunableItem>
    -elem1..N : ElementBase
    __
    #register_item(ElementBase, IElementInitializer)
    #register_item(Reader, IElementInitializer, IReaderResult)
    {abstract} #init_items()
    +TController create_controller()
    +show(bool, bool)
}

abstract ElementBase {
    {abstract} +draw(TextCanvas)
    +show()
    +show(Point)
}

package "" <<Rectangle>> {

    interface IViewRunableItem {
        IViewRunableItem(ElementBase)
        {abstract} + run(IController)
    }

    abstract ElementItemBase < class TElementInitializer > {
        #element : ElementBase
        #initializer : IElementInitializer
        #initReceiverFunc : InitializerReceiverFunc
        +ElementItemBase(ElementBase, InitializerReceiverFunc)
    }

    abstract ReaderItemBase < class TElementInitializer, class TReader > {
        # result : IReaderResult
        # resultReceiverFunc : ReaderResultReceiverFunc
        +ReaderItemBase(TReader, InitializerReceiverFunc, ReaderResultReceiverFunc)
    }
}

class "InitializerReceiverFunc = \n (IController::*)(TElementInitializer&)" as InitializerReceiverFunc <class TElementInitializer> << (F,teal) >>
hide InitializerReceiverFunc members

class "ReaderResultReceiverFunc = \n (IController::*)(TReaderResult&)" as ReaderResultReceiverFunc <class TReaderResult> << (F,teal) >>
hide ReaderResultReceiverFunc members

ElementItemBase <-right- InitializerReceiverFunc
ReaderItemBase <-right- ReaderResultReceiverFunc

interface IElementInitializer {
    +IElementInitializer(ElementBase)
}

class ReaderResult < TValue > {
    +IReaderResult()
}



IViewRunableItem <|.. ElementItemBase
ElementItemBase <|-- ReaderItemBase
ViewBase *-up- "1..*" ElementBase
ViewBase *- "1..*" IViewRunableItem
ElementItemBase <- IElementInitializer
ReaderItemBase <- IReaderResult

@enduml